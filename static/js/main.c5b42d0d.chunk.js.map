{"version":3,"sources":["axios.js","requests.js","modules/movies_action.jsx","CallYoutube.jsx","presentational/Row.js","containers/RowContainer.js","presentational/Banner.js","containers/BannerContainer.jsx","modules/search_action.jsx","pages/Home.jsx","presentational/SearchRow.js","containers/SearchRowContainer.jsx","pages/Search.jsx","pages/Movie.jsx","pages/TvShow.jsx","navbar/SearchIcon.js","navbar/SearchInput.js","navbar/Nav.js","App.js","serviceWorker.js","modules/modules.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchTrendingMovie","fetchTrendingTV","fetchTopRated","fetchAdventureMovie","fetchNetflixOriginalsMovie","fetchNetflixOriginalsTV","fetchComedyMovie","fetchComedyTV","fetchRomanceMovie","fetchRomanceTV","fetchActionMovie","fetchActionTV","fetchDocumentaryMovie","fetchDocumentaryTV","fetchFantasyMovie","fetchFantasyTV","fetchThrillerMovie","fetchThrillerTV","fetchScifiMovie","fetchScifiTV","fetchAnimationMovie","fetchAnimationTV","fetchMovies","RequestType","a","get","movies","LoadMovies","RequestURL","type","dispatch","e","handleAsync","key","keepData","SUCCESS","FAIL","state","action","reducerUtils","loading","data","success","error","initial","initialData","prevState","payload","initialState","handlers","forEach","genre","GET_GENRE","movieReducer","hasOwnProperty","createReducer","CallYoutube","movieName","useState","trailerUrl","setTrailerUrl","videoId","opts","height","width","playerVars","autoplay","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","alert","SwiperCore","use","Navigation","Row","isLarge","title","setMovies","useEffect","console","log","results","clickedMovieTitle","setClickedMovieTitle","clicked","setClicked","className","slidesPerView","spaceBetween","navigation","nextEl","prevEl","slidesPerGroup","speed","slidesOffsetBefore","map","movie","id","onClick","movieTitle","name","src","poster_path","backdrop_path","alt","style","color","RowContainer","useSelector","useDispatch","Banner","setMovie","backgroundSize","backgroundImage","backgroundPosition","overview","BannerContainer","query","current_page","home","tvshow","Home","SearchRow","rowNum","movieState","setMovieState","clickedMovieID","setClickedMovieID","clickpage","target","textContent","i","number","Math","floor","SearchRowContainer","setRowNum","request","total_results","fetchData","backgroundColor","Search","location","SearchQuery","qs","parse","ignoreQueryPrefix","searchRequest","Movie","TvShow","SearchIcon","stroke","fill","strokeWidth","d","SearchInput","React","memo","queryString","searchReducer","queryRef","useRef","history","useHistory","push","current","focus","ref","onChange","value","placeholder","onKeyDown","event","keyCode","page","Nav","ScrolledNav","handleScrolledNav","showBanner","window","scrollY","addEventListener","removeEventListener","cursor","paddingLeft","App","path","exact","component","from","to","Boolean","hostname","match","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c5b42d0d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\"\n});\n\nexport default instance;\n","const API_KEY = \"47223dc77b02e3169fa9047461b75c36\";\nconst requests = {\n    fetchTrending: `/trending/all/day?api_key=${API_KEY}`,\n    fetchTrendingMovie: `/trending/movie/week?api_key=${API_KEY}`,\n    fetchTrendingTV: `/trending/tv/day?api_key=${API_KEY}`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}`,\n    fetchAdventureMovie: `/discover/movie?api_key=${API_KEY}&with_genres=12`,\n    fetchNetflixOriginalsMovie: `/discover/movie?api_key=${API_KEY}&with_networks=213`,\n    fetchNetflixOriginalsTV: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchComedyMovie: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchComedyTV: `/discover/tv?api_key=${API_KEY}&with_genres=35`,\n    fetchRomanceMovie: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchRomanceTV: `/discover/tv?api_key=${API_KEY}&with_genres=10749`,\n    fetchActionMovie: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchActionTV: `/discover/tv?api_key=${API_KEY}&with_genres=28`,\n    fetchDocumentaryMovie: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n    fetchDocumentaryTV: `/discover/tv?api_key=${API_KEY}&with_genres=99`,\n    fetchFantasyMovie: `/discover/movie?api_key=${API_KEY}&with_genres=14`,\n    fetchFantasyTV: `/discover/tv?api_key=${API_KEY}&with_genres=14`,\n    fetchThrillerMovie: `/discover/movie?api_key=${API_KEY}&with_genres=53`,\n    fetchThrillerTV: `/discover/tv?api_key=${API_KEY}&with_genres=53`,\n    fetchScifiMovie: `/discover/movie?api_key=${API_KEY}&with_genres=878`,\n    fetchScifiTV: `/discover/tv?api_key=${API_KEY}&with_genres=878`,\n    fetchAnimationMovie: `/discover/movie?api_key=${API_KEY}&with_genres=16`,\n    fetchAnimationTV: `/discover/tv?api_key=${API_KEY}&with_genres=16`,\n};\n\nexport const genre_list = [\n    \"TRENDING\",\n    \"TRENDING_TV\",\n    \"TRENDING_MOVIE\",\n    \"TOPRATED\",\n    \"COMEDY_MOVIE\",\n    \"COMEDY_TV\",\n    \"ADVENTURE_MOVIE\",\n    \"ADVENTURE_TV\",\n    \"NORIGINALS_MOVIE\",\n    \"NORIGINALS_TV\",\n    \"COMEDY_MOVIE\",\n    \"COMEDY_TV\",\n    \"ROMANCE_TV\",\n    \"ROMANCE_MOVIE\",\n    \"ACTION_TV\",\n    \"ACTION_MOVIE\",\n    \"DOCUMENTARY_MOVIE\",\n    \"DOCUMENTARY_TV\",\n    \"FANTASY_MOVIE\",\n    \"FANTASY_TV\",\n    \"THRILLER_MOVIE\",\n    \"THRILLER_TV\",\n    \"SCIFI_TV\",\n    \"SCIFI_MOVIE\",\n    \"ANIMATION_MOVIE\",\n    \"ANIMATION_TV\",\n];\n\nexport default requests;\n","import axios from \"../axios\";\nimport { genre_list } from \"../requests\";\n\nconst fetchMovies = async (RequestType) => {\n    const movies = await axios.get(RequestType);\n    return movies;\n};\n\nexport const LoadMovies = (RequestURL, type) => async (dispatch) => {\n    dispatch({ type: `GET_${type}` });\n    try {\n        const movies = await fetchMovies(RequestURL);\n        dispatch({ type: `GET_${type}_SUCCESS`, movies });\n    } catch (e) {\n        dispatch({ type: `GET_${type}_FAIL`, e });\n    }\n};\n\nexport const handleAsync = (type, key, keepData = false) => {\n    const [SUCCESS, FAIL] = [`${type}_SUCCESS`, `${type}_FAIL`];\n    return (state, action) => {\n        switch (action.type) {\n            case type:\n                return {\n                    ...state,\n                    [key]: reducerUtils.loading(\n                        keepData ? state[key].data : null\n                    ),\n                };\n            case SUCCESS:\n                return {\n                    ...state,\n                    [key]: reducerUtils.success(action.movies),\n                };\n            case FAIL:\n                return {\n                    ...state,\n                    [key]: reducerUtils.error(action.error),\n                };\n            default:\n                return state;\n        }\n    };\n};\n\n// const initial_data_state = {\n//     data: null,\n//     loading: false,\n//     error: null,\n// };\n\nconst reducerUtils = {\n    initial: (initialData = null) => ({\n        loading: false,\n        data: initialData,\n        error: null,\n    }),\n    loading: (prevState = null) => ({\n        loading: true,\n        data: prevState,\n        error: null,\n    }),\n    success: (payload) => ({\n        loading: false,\n        data: payload,\n        error: null,\n    }),\n    error: (error) => ({\n        loading: false,\n        data: null,\n        error: error,\n    }),\n};\n\nconst initialState = {};\nconst handlers = {};\ngenre_list.forEach((genre) => {\n    initialState[genre] = reducerUtils.initial();\n    const [GET_GENRE, SUCCESS, FAIL] = [\n        `GET_${genre}`,\n        `GET_${genre}_SUCCESS`,\n        `GET_${genre}_FAIL`,\n    ];\n    handlers[GET_GENRE] = handleAsync(GET_GENRE, genre, true);\n    handlers[SUCCESS] = handleAsync(GET_GENRE, genre, true);\n    handlers[FAIL] = handleAsync(GET_GENRE, genre, true);\n});\n\nfunction createReducer(initialState, handlers) {\n    return function reducer(state = initialState, action) {\n        if (handlers.hasOwnProperty(action.type)) {\n            return handlers[action.type](state, action);\n        } else {\n            return state;\n        }\n    };\n}\n\nexport const movieReducer = createReducer(initialState, handlers);\n","import React, { useState } from \"react\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nfunction CallYoutube({ movieName }) {\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n    const opts = {\n        height: \"400\",\n        width: \"100%\",\n        playerVars: {\n            autoplay: 1\n        }\n    };\n\n    if (trailerUrl) {\n        return <Youtube videoId={trailerUrl} opts={opts} />;\n    } else {\n        movieTrailer(movieName)\n            .then(url => {\n                const urlParams = new URLSearchParams(new URL(url).search);\n                setTrailerUrl(urlParams.get(\"v\"));\n            })\n            .catch(error => {\n                alert(\n                    \"Trailer for this movie is currently unavailable in movie-trailer api. Try clicking another movie\"\n                );\n            });\n    }\n\n    return null;\n}\n\nexport default CallYoutube;\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles/Row.scss\";\nimport CallYoutube from \"../CallYoutube\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\n\nSwiperCore.use([Navigation]);\nconst imageURL = \"https://image.tmdb.org/t/p/original\";\n\nfunction Row({ data, isLarge, title }) {\n    // store movie data to be displayed in row\n    const [movies, setMovies] = useState([]);\n    useEffect(() => {\n        console.log(title, \"row js\");\n        setMovies(data.data.results);\n    }, [data, title]);\n\n    // track click and get the name of the movie clicked\n    const [clickedMovieTitle, setClickedMovieTitle] = useState(\"\");\n    const [clicked, setClicked] = useState(false);\n\n    const click = (movieTitle) => {\n        setClickedMovieTitle(movieTitle);\n        setClicked(!clicked);\n    };\n\n    return (\n        <div className=\"row\">\n            <h2 className=\"row titles\">{title}</h2>\n\n            {/* Calling SwiperJS */}\n            <Swiper\n                slidesPerView={6}\n                spaceBetween={5}\n                navigation={{\n                    nextEl: \".swiper-button-next\",\n                    prevEl: \".swiper-button-prev\",\n                }}\n                className=\"row swiper\"\n                slidesPerGroup={5}\n                speed={650}\n                slidesOffsetBefore={50}\n            >\n                {movies.map((movie) => (\n                    <SwiperSlide key={movie.id}>\n                        {/* call different poster size depending on isLarge value */}\n                        <img\n                            onClick={() => click(movie.title || movie.name)}\n                            className={`row poster`}\n                            src={\n                                isLarge\n                                    ? `${imageURL}${movie.poster_path}`\n                                    : `${imageURL}${movie.backdrop_path}`\n                            }\n                            alt={movie.title}\n                        />\n                    </SwiperSlide>\n                ))}\n\n                {/* Navigation buttons */}\n                <div\n                    className=\"swiper-button-next\"\n                    style={{ color: \"white\" }}\n                />\n                <div\n                    className=\"swiper-button-prev\"\n                    style={{ color: \"white\" }}\n                />\n            </Swiper>\n\n            {/* call youtube trailer for the movie displayed in row after it gets clicked*/}\n            {clickedMovieTitle && clicked && (\n                <CallYoutube movieName={clickedMovieTitle} />\n            )}\n        </div>\n    );\n}\n\nexport default Row;\n","import React, { useEffect } from \"react\";\nimport { LoadMovies } from \"../modules/movies_action\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Row from \"../presentational/Row\";\n\nfunction RowContainer({ url, title, isLarge, type }) {\n    // console.log(title);\n    const { data, loading, error } = useSelector(\n        (state) => state.movieReducer[type]\n    );\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (data) return;\n        dispatch(LoadMovies(url, type));\n    }, [dispatch, url, type, data]);\n\n    if (loading && !data) return <div>loading...</div>;\n    if (error) {\n        console.log(error);\n    }\n    if (!data) {\n        return null;\n    }\n\n    return <Row data={data} isLarge={isLarge} title={title} />;\n}\n\nexport default RowContainer;\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles/Banner.scss\";\nimport CallYoutube from \"../CallYoutube\";\n\nfunction Banner({ data }) {\n    const imageURL = \"https://image.tmdb.org/t/p/original\";\n    const [movie, setMovie] = useState([]);\n    const [clicked, setClicked] = useState(false);\n\n    useEffect(() => {\n        setMovie(data.data.results[0]);\n    }, [data]);\n\n    const click = () => {\n        setClicked(!clicked);\n        console.log(\"clicked\");\n    };\n\n    return (\n        <>\n            <header\n                className=\"banner\"\n                style={{\n                    backgroundSize: \"cover\",\n                    backgroundImage: `url(${imageURL}${movie.backdrop_path})`,\n                    backgroundPosition: \"center center\",\n                }}\n            >\n                <div className=\"banner content\">\n                    <h1 className=\"banner title\">\n                        {movie.title || movie.name}\n                    </h1>\n                    <div className=\"banner buttons\">\n                        <button className=\"banner button\" onClick={click}>\n                            Play\n                        </button>\n                        <button className=\"banner button\">List</button>\n                    </div>\n                    <h1 className=\"banner description\">{movie.overview}</h1>\n                </div>\n                <div className=\"banner fadeBottom\" />\n            </header>\n            {clicked && <CallYoutube movieName={movie.title || movie.name} />}\n        </>\n    );\n}\n\nexport default Banner;\n","import React, { useEffect } from \"react\";\nimport { LoadMovies } from \"../modules/movies_action\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Banner from \"../presentational/Banner\";\n\nfunction BannerContainer({ type, url }) {\n    // console.log(\"banner\");\n    const { data, loading, error } = useSelector(\n        (state) => state.movieReducer[type]\n    );\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (data) return;\n        dispatch(LoadMovies(url, type));\n    }, [dispatch, data, url, type]);\n\n    if (loading && !data) return <div>loading...</div>;\n    if (!data) {\n        return null;\n    }\n\n    if (error) {\n        console.log(error);\n    }\n    return <Banner data={data} />;\n}\n\nexport default BannerContainer;\n","const initialState = {\n    query: \"\",\n    clicked: false,\n    current_page: {\n        home: false,\n        movie: false,\n        tvshow: false,\n    },\n};\nconst SEARCH_USER_INPUT = \"SEARCH_USER_INPUT\";\nconst CLICKED = \"CLICKED\";\nconst SET_HOME = \"SET_HOME\";\nconst SET_MOVIE = \"SET_MOVIE\";\nconst SET_TVSHOW = \"SET_TVSHOW\";\n\n// handle search input from user\nexport const searchUserInput = (query) => ({\n    type: SEARCH_USER_INPUT,\n    query,\n});\n\n// handle whether searchbar icon is clicked or not\nexport const btnClicked = () => ({\n    type: CLICKED,\n});\n\nexport const setHome = () => ({\n    type: SET_HOME,\n});\n\nexport const setMovie = () => ({\n    type: SET_MOVIE,\n});\n\nexport const setTVShow = () => ({\n    type: SET_TVSHOW,\n});\nexport default function searchReducer(state = initialState, action) {\n    switch (action.type) {\n        case SEARCH_USER_INPUT:\n            return {\n                ...state,\n                query: action.query,\n            };\n        case CLICKED:\n            return {\n                ...state,\n                clicked: !state.clicked,\n            };\n        case SET_HOME:\n            return {\n                ...state,\n                current_page: {\n                    home: true,\n                    movie: false,\n                    tvshow: false,\n                },\n            };\n        case SET_MOVIE:\n            return {\n                ...state,\n                current_page: {\n                    home: false,\n                    movie: true,\n                    tvshow: false,\n                },\n            };\n        case SET_TVSHOW:\n            return {\n                ...state,\n                current_page: {\n                    home: false,\n                    movie: false,\n                    tvshow: true,\n                },\n            };\n\n        default:\n            return state;\n    }\n}\n","import React, { useEffect } from \"react\";\nimport RowContainer from \"../containers/RowContainer\";\nimport requests from \"../requests\";\nimport BannerContainer from \"../containers/BannerContainer\";\nimport \"../styles/App.scss\";\nimport { useDispatch } from \"react-redux\";\nimport { setHome } from \"../modules/search_action\";\n\nfunction Home() {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(setHome());\n    });\n    return (\n        <div className=\"app\">\n            <BannerContainer type=\"TRENDING\" url={requests.fetchTrending} />\n            <RowContainer\n                title=\"Trending Today\"\n                url={requests.fetchTrending}\n                type=\"TRENDING\"\n                isLarge\n            />\n            <RowContainer\n                title=\"Netflix Originals Films\"\n                url={requests.fetchNetflixOriginalsMovie}\n                type=\"NORIGINALS_MOVIE\"\n            />\n            <RowContainer\n                title=\"Netflix Originals TV Series\"\n                url={requests.fetchNetflixOriginalsTV}\n                type=\"NORIGINALS_TV\"\n            />\n            <RowContainer\n                title=\"Top Rated\"\n                url={requests.fetchTopRated}\n                type=\"TOPRATED\"\n            />\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport \"../styles/SearchRow.scss\";\nimport CallYoutube from \"../CallYoutube\";\n\nconst imageURL = \"https://image.tmdb.org/t/p/original\";\n\nfunction SearchRow({ movies, rowNum, url }) {\n    const [movieState, setMovieState] = useState(\"\");\n    const [clicked, setClicked] = useState(false);\n    const [clickedMovieID, setClickedMovieID] = useState(0);\n\n    const click = (movieTitle, number) => {\n        setClickedMovieID(Math.floor(number / 5)); //divide movie ID by 5 to find its trailer row\n        setMovieState(movieTitle);\n        setClicked(!clicked);\n    };\n\n    const clickpage = (e) => {\n        console.log(e.target.textContent);\n    };\n\n    return (\n        <>\n            <div className=\"grid\">\n                {movies.map((movie, i) => (\n                    <>\n                        <div>\n                            <img\n                                onClick={() =>\n                                    click(movie.title || movie.name, i)\n                                }\n                                key={i}\n                                src={`${imageURL}${movie.backdrop_path}`}\n                                alt={movie.title}\n                                className=\"poster\"\n                            />\n                        </div>\n\n                        {/* for every row of searched movie posters, create another row for trailers (trailer row) to be displayed once clicked */}\n                        {(i + 1) % 5 === 0 && (\n                            <>\n                                {/* first cell of trailer row - check the ID of the clicked movie to locate its trailer row */}\n                                {Math.floor(i / 5) === clickedMovieID ? (\n                                    <div\n                                        style={{\n                                            width: \"525%\",\n                                        }}\n                                    >\n                                        {/* Call movie trailer once its poster is clicked and has valid movie title */}\n                                        {movieState && clicked && (\n                                            <CallYoutube\n                                                movieName={movieState}\n                                            />\n                                        )}\n                                    </div>\n                                ) : (\n                                    <div />\n                                )}\n\n                                {/*  empty divs as placeholders*/}\n                                <div />\n                                <div />\n                                <div />\n                                <div />\n                            </>\n                        )}\n                    </>\n                ))}\n            </div>\n            <span>\n                <b className=\"pageCol\" onClick={clickpage}>\n                    1\n                </b>\n                <b className=\"pageCol\" onClick={clickpage}>\n                    2\n                </b>\n                <b className=\"pageCol\" onClick={clickpage}>\n                    3\n                </b>\n            </span>\n        </>\n    );\n}\n\nexport default SearchRow;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"../axios\";\nimport SearchRow from \"../presentational/SearchRow\";\n\nfunction SearchRowContainer({ url }) {\n    const [movies, setMovies] = useState([]);\n    const [rowNum, setRowNum] = useState(0);\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(url);\n            setMovies(request.data.results);\n\n            // check number of movies received to calculate number of rows - each row should display 5 movies\n            request.data.total_results >= 20\n                ? setRowNum(4)\n                : setRowNum(Math.floor(request.data.total_results / 5) + 1);\n            return request;\n        }\n        fetchData();\n    }, [url]);\n\n    if (rowNum === 4) {\n        return (\n            <div style={{ backgroundColor: \"#111\" }}>\n                <SearchRow movies={movies} rowNum={rowNum} url />;\n            </div>\n        );\n    } else {\n        // specify div height only when numRows are less than 4 - shows white space if this is not implemented\n        return (\n            <div style={{ backgroundColor: \"#111\", height: \"100vh\" }}>\n                <SearchRow movies={movies} rowNum={rowNum} url />;\n            </div>\n        );\n    }\n}\n\nexport default SearchRowContainer;\n","import React from \"react\";\nimport qs from \"qs\";\nimport SearchRowContainer from \"../containers/SearchRowContainer\";\n\nfunction Search({ location }) {\n    const SearchQuery = qs.parse(location.search, {\n        ignoreQueryPrefix: true,\n    }).query;\n\n    const searchRequest = `/search/multi?api_key=47223dc77b02e3169fa9047461b75c36&query=${SearchQuery}`;\n\n    return <SearchRowContainer url={searchRequest} />;\n}\n\nexport default Search;\n","import React, { useEffect } from \"react\";\nimport \"../styles/App.scss\";\nimport RowContainer from \"../containers/RowContainer\";\nimport requests from \"../requests\";\nimport BannerContainer from \"../containers/BannerContainer\";\nimport { useDispatch } from \"react-redux\";\nimport { setMovie } from \"../modules/search_action\";\nfunction Movie() {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(setMovie());\n    });\n    return (\n        <div className=\"app\">\n            <BannerContainer\n                type=\"NORIGINALS_MOVIE\"\n                url={requests.fetchNetflixOriginalsMovie}\n            />\n            <RowContainer\n                title=\"Trending This Week\"\n                url={requests.fetchTrendingMovie}\n                type=\"TRENDING_MOVIE\"\n                isLarge\n            />\n            <RowContainer\n                title=\"Netflix Originals Films\"\n                url={requests.fetchNetflixOriginalsMovie}\n                type=\"NORIGINALS_MOVIE\"\n            />\n            <RowContainer\n                title=\"Romance Films\"\n                url={requests.fetchRomanceMovie}\n                type=\"ROMANCE_MOVIE\"\n            />\n            <RowContainer\n                title=\"Comedy Films\"\n                url={requests.fetchComedyMovie}\n                type=\"COMEDY_MOVIE\"\n            />\n            <RowContainer\n                title=\"Adventure Films\"\n                url={requests.fetchAdventureMovie}\n                type=\"ADVENTURE_MOVIE\"\n            />\n            <RowContainer\n                title=\"Action Films\"\n                url={requests.fetchActionMovie}\n                type=\"ACTION_MOVIE\"\n                isLarge\n            />\n            <RowContainer\n                title=\"Documentary Films\"\n                url={requests.fetchDocumentaryMovie}\n                type=\"DOCUMENTARY_MOVIE\"\n            />\n            <RowContainer\n                title=\"Animation Films\"\n                url={requests.fetchAnimationMovie}\n                type=\"ANIMATION_MOVIE\"\n            />\n            <RowContainer\n                title=\"Thriller Films\"\n                url={requests.fetchThrillerMovie}\n                type=\"THRILLER_MOVIE\"\n            />\n            <RowContainer\n                title=\"Science Fiction Films\"\n                url={requests.fetchScifiMovie}\n                type=\"SCIFI_MOVIE\"\n            />\n        </div>\n    );\n}\n\nexport default Movie;\n","import React, { useEffect } from \"react\";\nimport \"../styles/App.scss\";\nimport RowContainer from \"../containers/RowContainer\";\nimport requests from \"../requests\";\nimport BannerContainer from \"../containers/BannerContainer\";\nimport { useDispatch } from \"react-redux\";\nimport { setTVShow } from \"../modules/search_action\";\n\nfunction TvShow() {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(setTVShow());\n    });\n    return (\n        <div className=\"app\">\n            <BannerContainer\n                type=\"TRENDING_TV\"\n                url={requests.fetchTrendingTV}\n            />\n            <RowContainer\n                title=\"Trending This Week\"\n                url={requests.fetchTrendingTV}\n                type=\"TRENDING_TV\"\n                isLarge\n            />\n            <RowContainer\n                title=\"Netflix Originals TV Series\"\n                url={requests.fetchNetflixOriginalsTV}\n                type=\"NORIGINALS_TV\"\n            />\n            <RowContainer\n                title=\"Comedy TV Series\"\n                url={requests.fetchComedyTV}\n                type=\"COMEDY_TV\"\n            />\n            <RowContainer\n                title=\"Romance TV Series\"\n                url={requests.fetchRomanceTV}\n                type=\"ROMANCE_TV\"\n            />\n            <RowContainer\n                title=\"Documentary TV Series\"\n                url={requests.fetchDocumentaryTV}\n                type=\"DOCUMENTARY_TV\"\n            />\n            <RowContainer\n                title=\"Animation TV Series\"\n                url={requests.fetchAnimationTV}\n                type=\"ANIMATION_TV\"\n            />\n            <RowContainer\n                title=\"Thriller TV Series\"\n                url={requests.fetchThrillerTV}\n                type=\"THRILLER_TV\"\n            />\n        </div>\n    );\n}\n\nexport default TvShow;\n","import React from \"react\";\n\nfunction SearchIcon() {\n    return (\n        <>\n            <svg className={\"SearchIcon\"}>\n                <path\n                    className=\"icon\"\n                    stroke=\"white\"\n                    fill=\"transparent\"\n                    strokeWidth=\"3\"\n                    d=\"M15,15 L22,22 L15,15 Z M9.5,17 C13.6421356,17 17,13.6421356 17,9.5 C17,5.35786438 13.6421356,2 9.5,2 C5.35786438,2 2,5.35786438 2,9.5 C2,13.6421356 5.35786438,17 9.5,17 Z\"\n                />\n            </svg>\n        </>\n    );\n}\n\nexport default SearchIcon;\n","import React, { useRef, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchUserInput } from \"../modules/search_action\";\nimport { btnClicked } from \"../modules/search_action\";\n\nconst SearchInput = React.memo(({ clicked }) => {\n    const queryString = useSelector((state) => state.searchReducer.query);\n    const dispatch = useDispatch();\n    const queryRef = useRef();\n    let history = useHistory();\n    const current_page = useSelector(\n        (state) => state.searchReducer.current_page\n    );\n\n    if (queryString && clicked) {\n        // if user has typed input\n        history.push(`/Netflix_Clone/search?query=${queryString}`);\n    }\n\n    const handleChange = (e) => {\n        // send input to store\n        dispatch(searchUserInput(e.target.value));\n    };\n\n    useEffect(() => {\n        queryRef.current.focus();\n    });\n    const handleEscape = (event) => {\n        if (event.keyCode === 27) {\n            const page = current_page.home\n                ? \"/Netflix_Clone/home\"\n                : current_page.movie\n                ? \"/Netflix_Clone/movies\"\n                : \"/Netflix_Clone/tvshows\";\n            history.push(page);\n            dispatch(btnClicked());\n        }\n    };\n\n    return (\n        <input\n            type=\"text\"\n            ref={queryRef}\n            onChange={handleChange}\n            placeholder={\"Titles, people, genres\"}\n            className={`SearchInput ${clicked && \"clicked\"}`}\n            onKeyDown={handleEscape}\n        />\n    );\n});\n\nexport default SearchInput;\n","import React, { useEffect, useState } from \"react\";\nimport \"../styles/Nav.scss\";\nimport SearchIcon from \"./SearchIcon\";\nimport SearchInput from \"./SearchInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { btnClicked } from \"../modules/search_action\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Nav() {\n    const dispatch = useDispatch();\n    let history = useHistory();\n    const clicked = useSelector((state) => state.searchReducer.clicked);\n    const current_page = useSelector(\n        (state) => state.searchReducer.current_page\n    );\n\n    const toggle = () => {\n        dispatch(btnClicked());\n    };\n\n    // turn Nav to dark if the page is scrolled over 100\n    const [ScrolledNav, handleScrolledNav] = useState(false);\n    useEffect(() => {\n        const showBanner = () => {\n            if (window.scrollY > 100) {\n                handleScrolledNav(true);\n            } else {\n                handleScrolledNav(false);\n            }\n        };\n        window.addEventListener(\"scroll\", () => showBanner());\n        return () => {\n            window.removeEventListener(\"scroll\", showBanner());\n        };\n    }, []);\n\n    return (\n        <div className={`nav ${(ScrolledNav || clicked) && \"dark\"}`}>\n            {/* Netflix logo button */}\n            <div className={\"navDiv\"}>\n                <img\n                    className={\"logo\"}\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n                    alt=\"Netflix Logo\"\n                    onClick={() => history.push(\"/Netflix_Clone/home\")}\n                    style={{ cursor: \"pointer\" }}\n                />\n                <span style={{ paddingLeft: \"7.5rem\" }}>\n                    <b\n                        className={`navMenu ${\n                            current_page.home && \"currentPage\"\n                        } `}\n                        onClick={() => history.push(\"/Netflix_Clone/home\")}\n                    >\n                        Home\n                    </b>\n                    <b\n                        className={`navMenu ${\n                            current_page.movie && \"currentPage\"\n                        }`}\n                        onClick={() => history.push(\"/Netflix_Clone/movies\")}\n                    >\n                        Movies\n                    </b>\n                    <b\n                        className={`navMenu ${\n                            current_page.tvshow && \"currentPage\"\n                        }`}\n                        onClick={() => history.push(\"/Netflix_Clone/tvshows\")}\n                    >\n                        TV Shows\n                    </b>\n                </span>\n            </div>\n\n            <div className={\"SearchDiv\"}>\n                {/* input tag only visible once search bar icon is clicked */}\n                <SearchInput clicked={clicked} />\n\n                {/* search bar icon */}\n                <div onClick={() => toggle()}>\n                    <SearchIcon />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport Home from \"./pages/Home\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Movie from \"./pages/Movie\";\nimport TvShow from \"./pages/TvShow\";\nimport Nav from \"./navbar/Nav\";\n\nconst App = () => {\n    return (\n        <div>\n            <Nav />\n            <Switch>\n                <Route path=\"/Netflix_Clone/home\" exact component={Home} />\n                <Route path=\"/Netflix_Clone/search\" exact component={Search} />\n                <Route path=\"/Netflix_Clone/movies\" exact component={Movie} />\n                <Route path=\"/Netflix_Clone/tvshows\" exact component={TvShow} />\n                <Redirect from=\"/\" to=\"/Netflix_Clone/home\" />\n            </Switch>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { movieReducer } from \"./movies_action\";\nimport searchReducer from \"./search_action\";\n\nconst rootReducer = combineReducers({\n    movieReducer,\n    searchReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./modules/modules\";\nimport ReduxThunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(ReduxThunk))\n);\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}